[{"D:\\workspace\\reacttutorial\\src\\App.js":"1","D:\\workspace\\reacttutorial\\src\\Card.js":"2","D:\\workspace\\reacttutorial\\src\\reportWebVitals.js":"3","D:\\workspace\\reacttutorial\\classbasecomponent\\src\\reportWebVitals.js":"4","D:\\workspace\\reacttutorial\\classbasecomponent\\src\\Card.js":"5","D:\\workspace\\reacttutorial\\classbasecomponent\\src\\App.js":"6","D:\\workspace\\reacttutorial\\classbasecomponent\\src\\index.js":"7"},{"size":1837,"mtime":1607666033182,"results":"8","hashOfConfig":"9"},{"size":669,"mtime":1607665856373,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607578085322,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1607578085322,"results":"12","hashOfConfig":"13"},{"size":669,"mtime":1607665856373,"results":"14","hashOfConfig":"13"},{"size":2508,"mtime":1607941740036,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":1607578085322,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5nrv22",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"81j6rf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\reacttutorial\\src\\App.js",["32","33","34","35","36"],"D:\\workspace\\reacttutorial\\src\\Card.js",["37"],"D:\\workspace\\reacttutorial\\src\\reportWebVitals.js",[],"D:\\workspace\\reacttutorial\\classbasecomponent\\src\\reportWebVitals.js",[],"D:\\workspace\\reacttutorial\\classbasecomponent\\src\\Card.js",["38"],"import React from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nexport const Card = (props) => {\r\n    console.log(\"\",props)\r\n    return (\r\n        <div className=\"card\">\r\n            {console.log(\"p\",props)}\r\n            \r\n      <img  src={props.avatar} alt=\"Avatar\" style={{width:\"100%\" }} />\r\n      <div className=\"container\">\r\n        <h4><b>{props.name}</b></h4> \r\n        <div><input type=\"text\" onChange={props.onChange}/></div>\r\n        <p>{props.title}</p> \r\n        <div>{props.children}</div>\r\n        \r\n        <div><button className=\"button-red button\" onClick={props.onDelete}>Delete</button></div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","D:\\workspace\\reacttutorial\\classbasecomponent\\src\\App.js",[],"D:\\workspace\\reacttutorial\\classbasecomponent\\src\\index.js",[],{"ruleId":"39","severity":1,"message":"40","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":14},{"ruleId":"39","severity":1,"message":"43","line":28,"column":9,"nodeType":"41","messageId":"42","endLine":28,"endColumn":26},{"ruleId":"39","severity":1,"message":"44","line":40,"column":9,"nodeType":"41","messageId":"42","endLine":40,"endColumn":27},{"ruleId":"45","severity":1,"message":"46","line":44,"column":53,"nodeType":"47","messageId":"48","endLine":44,"endColumn":55},{"ruleId":"39","severity":1,"message":"49","line":61,"column":9,"nodeType":"41","messageId":"42","endLine":61,"endColumn":19},{"ruleId":"39","severity":1,"message":"50","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":12},{"ruleId":"39","severity":1,"message":"50","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":12},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'ChangeNameHandler' is assigned a value but never used.","'ChangeInputHandler' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buttonMark' is assigned a value but never used.","'logo' is defined but never used."]